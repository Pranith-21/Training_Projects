//power using iterative
#include<stdio.h>
pow(int x,int n);
int main()
{
    int x,n;
    printf("enter the number");
    scanf("%d",&x);
    printf("enter the power ");
    scanf("%d",&n);
    printf("%d",pow(x,n));
}
int pow(int x,int n)
{
    int b=1;
    for(int i=1;i<=n;i++)
    {
      b=b*x;
    }
    return b;
}

//power using recursive
#include<stdio.h>
pow(int x,int n);
int main()
{
    int x,n;
    printf("enter the number");
    scanf("%d",&x);
    printf("enter the power ");
    scanf("%d",&n);
    printf("%d",pow(x,n));
}
int pow(int x,int n)
{
    if(n==0)
    return 1;
    return x*pow(x,n-1);
    
}

//modular using recursive
#include<stdio.h>
pow(int x,int n);
mod(int b,int m);
int main()
{
    int x,n,m,b;
    printf("enter the number");
    scanf("%d",&x);
    printf("enter the power ");
    scanf("%d",&n);
    printf("enter the values of m");
    scanf("%d",&m);
    b=pow(x,n);
    printf("%d",mod(b,m));
}
int pow(int x,int n)
{
    if(n==0)
    return 1;
    return x*pow(x,n-1);
}
int mod(int b,int m)
{
    if((b-m)<0)
    return b;
    else
    mod(b-m,m);
}

//modular using iterative
#include<stdio.h>
pow(int x,int n);
mod(int b,int m);
int main()
{
    int x,n,m,b;
    printf("enter the number");
    scanf("%d",&x);
    printf("enter the power ");
    scanf("%d",&n);
    printf("enter the values of m");
    scanf("%d",&m);
    b=pow(x,n);
    int a=mod(b,m);
    printf("%d",a);
}
int pow(int x,int n)
{
    if(n==0)
    return 1;
    return x*pow(x,n-1);
}
int mod(int b,int m)
{
    for(int i=0;;i++)
    {
        if((b-m)<0)
        return b;
        else
        b=b-m;
    }
    
}
